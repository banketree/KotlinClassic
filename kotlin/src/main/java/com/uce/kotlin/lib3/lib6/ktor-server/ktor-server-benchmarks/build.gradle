plugins {
    id 'me.champeau.gradle.jmh' version '0.4.5'
}

apply plugin: 'kotlin-allopen'

allOpen {
    annotation('org.openjdk.jmh.annotations.State')
}

kotlin {
    targets {
        fromPreset(presets.jvmWithJava, 'jvmWithJava')
    }
}

description = ''
dependencies {
    api group: 'org.openjdk.jmh', name: 'jmh-core', version: '1.21'

    def deps = [
        project(':ktor-server:ktor-server-test-host'),
        project(':ktor-server:ktor-server-netty'),
        project(':ktor-server:ktor-server-jetty'),
        project(':ktor-server:ktor-server-cio'),
        project(':ktor-client:ktor-client-cio'),
        project(':ktor-client:ktor-client-apache')
    ]

    deps.each {
        jmh it
        jmhCompile it
        jmhCompileClasspath it
        jmhRuntimeClasspath it

        jmh it.kotlin.targets.jvm.compilations.main.output.allOutputs
        jmhCompileClasspath it.kotlin.targets.jvm.compilations.main.output.allOutputs
        jmhRuntimeClasspath it.kotlin.targets.jvm.compilations.main.output.allOutputs
        
        jmh it.kotlin.targets.jvm.compilations.test.output.allOutputs
        jmhCompileClasspath it.kotlin.targets.jvm.compilations.test.output.allOutputs
        jmhRuntimeClasspath it.kotlin.targets.jvm.compilations.test.output.allOutputs

//        jmhCompile it.kotlin.targets.jvm.compilations.test.output.allOutputs

    }

    jmh group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.2'
    jmh group: 'com.squareup.okhttp3', name: 'okhttp', version: '3.6.0'
    jmh group: 'ch.qos.logback', name: 'logback-classic', version: logback_version
}

jmh {
    jmhVersion = jmh_version
    jmhJar {
        archiveName = 'benchmarks.jar'
    }
}


task runBenchmark(type: JavaExec, dependsOn: 'jmhJar') {
    def mainClassFqName = null

    if (project.hasProperty('benchmarkClassFqName')) {
        mainClassFqName = project.benchmarkClassFqName
    } else if (project.hasProperty('benchmarkName')) {
        mainClassFqName = "io.ktor.server.benchmarks.${project.benchmarkName}Kt"
    }

    classpath = sourceSets.jmh.runtimeClasspath + jmhJar.outputs.files
    main = mainClassFqName
    systemProperties['benchmarkClassFqName'] = mainClassFqName

    doFirst {
        if (mainClassFqName == null) {
            throw new InvalidUserDataException("Neither benchmarkName nor benchmarkClassFqName property specified (use option -P to assign)")
        }

        new File(project.buildDir, 'reports/benchmarks').mkdirs()
    }
}
